// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SolverClientComunication;

#nullable disable

namespace SolverClientComunication.Migrations
{
    [DbContext(typeof(CustomSqlContext))]
    [Migration("20241019113001_Reset-After-EF-Update")]
    partial class ResetAfterEFUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SolverClientComunication.Models.DbAirplanes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BaseAirportId")
                        .HasColumnType("bigint");

                    b.Property<double>("Capacity")
                        .HasColumnType("float");

                    b.Property<double>("CruiseSpeed")
                        .HasColumnType("float");

                    b.Property<int>("FuelConsumptionFirstHour")
                        .HasColumnType("int");

                    b.Property<int>("FuelConsumptionSecondHour")
                        .HasColumnType("int");

                    b.Property<long>("InstanceId")
                        .HasColumnType("bigint");

                    b.Property<double>("MaxFuel")
                        .HasColumnType("float");

                    b.Property<int>("MaxWeight")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Range")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BaseAirportId");

                    b.HasIndex("InstanceId");

                    b.ToTable("DbAirplanes");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbAirports", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AirportName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Elevation")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("GroundTime")
                        .HasColumnType("time");

                    b.Property<string>("IATA")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<long>("InstanceId")
                        .HasColumnType("bigint");

                    b.Property<int>("LandingCost")
                        .HasColumnType("int");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MTOW_APE3")
                        .HasColumnType("int");

                    b.Property<int>("MTOW_PC12")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("RunwayLength")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstanceId");

                    b.ToTable("DbAirports");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbExchangeRates", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencySymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InstanceId")
                        .HasColumnType("bigint");

                    b.Property<double>("ValueInDolar")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("InstanceId");

                    b.ToTable("DbExchangeRates");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbFlightsReport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AirplanesId")
                        .HasColumnType("bigint");

                    b.Property<TimeSpan>("ArrivalTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("DepartureTime")
                        .HasColumnType("time");

                    b.Property<long>("DestinationId")
                        .HasColumnType("bigint");

                    b.Property<double>("FuelOnArrival")
                        .HasColumnType("float");

                    b.Property<double>("FuelOnDeparture")
                        .HasColumnType("float");

                    b.Property<long>("InstanceId")
                        .HasColumnType("bigint");

                    b.Property<long>("OriginId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AirplanesId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("InstanceId");

                    b.HasIndex("OriginId");

                    b.ToTable("DbFlightsReport");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbFuelPrice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AirportId")
                        .HasColumnType("bigint");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InstanceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AirportId");

                    b.HasIndex("InstanceId");

                    b.ToTable("DbFuelPrice");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbGeneralParametersDefault", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DbGeneralParametersDefault");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbImportErrors", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ImportationHour")
                        .HasColumnType("datetime2");

                    b.Property<long>("InstanceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowLine")
                        .HasColumnType("int");

                    b.Property<string>("Sheet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstanceId");

                    b.ToTable("DbImportErrors");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbInstance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("LastOptimization")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("Optimized")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DbInstance");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbOptimizationAlerts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("InstanceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstanceId");

                    b.ToTable("DbOptimizationAlerts");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbParameters", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InstanceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstanceId");

                    b.ToTable("DbParameters");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbPassagensOnFlightReport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("FlightId")
                        .HasColumnType("bigint");

                    b.Property<long>("PassengerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.HasIndex("PassengerId");

                    b.ToTable("DbPassagensOnFlightReport");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbRefuelsReport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AirplanesId")
                        .HasColumnType("bigint");

                    b.Property<long>("AirportId")
                        .HasColumnType("bigint");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<long>("InstanceId")
                        .HasColumnType("bigint");

                    b.Property<TimeSpan>("RefuelTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("AirplanesId");

                    b.HasIndex("AirportId");

                    b.HasIndex("InstanceId");

                    b.ToTable("DbRefuelsReport");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbReportList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ReportLabel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DbReportList");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbRequests", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<TimeSpan>("ArrivalTimeWindowBegin")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("ArrivalTimeWindowEnd")
                        .HasColumnType("time");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("DepartureTimeWindowBegin")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("DepartureTimeWindowEnd")
                        .HasColumnType("time");

                    b.Property<long>("DestinationId")
                        .HasColumnType("bigint");

                    b.Property<long>("InstanceId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsChildren")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OriginId")
                        .HasColumnType("bigint");

                    b.Property<string>("PNR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DestinationId");

                    b.HasIndex("InstanceId");

                    b.HasIndex("OriginId");

                    b.ToTable("DbRequests");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbSeats", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AirplanesId")
                        .HasColumnType("bigint");

                    b.Property<double>("luggageWeightLimit")
                        .HasColumnType("float");

                    b.Property<string>("seatClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AirplanesId");

                    b.ToTable("DbSeats");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbStretches", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Distance")
                        .HasColumnType("int");

                    b.Property<long>("InstanceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DbStretches");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbAirplanes", b =>
                {
                    b.HasOne("SolverClientComunication.Models.DbAirports", "BaseAirport")
                        .WithMany()
                        .HasForeignKey("BaseAirportId");

                    b.HasOne("SolverClientComunication.Models.DbInstance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseAirport");

                    b.Navigation("Instance");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbAirports", b =>
                {
                    b.HasOne("SolverClientComunication.Models.DbInstance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instance");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbExchangeRates", b =>
                {
                    b.HasOne("SolverClientComunication.Models.DbInstance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instance");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbFlightsReport", b =>
                {
                    b.HasOne("SolverClientComunication.Models.DbAirplanes", "Airplanes")
                        .WithMany()
                        .HasForeignKey("AirplanesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SolverClientComunication.Models.DbAirports", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SolverClientComunication.Models.DbInstance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SolverClientComunication.Models.DbAirports", "Origin")
                        .WithMany()
                        .HasForeignKey("OriginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airplanes");

                    b.Navigation("Destination");

                    b.Navigation("Instance");

                    b.Navigation("Origin");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbFuelPrice", b =>
                {
                    b.HasOne("SolverClientComunication.Models.DbAirports", "Airport")
                        .WithMany()
                        .HasForeignKey("AirportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SolverClientComunication.Models.DbInstance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airport");

                    b.Navigation("Instance");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbImportErrors", b =>
                {
                    b.HasOne("SolverClientComunication.Models.DbInstance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instance");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbOptimizationAlerts", b =>
                {
                    b.HasOne("SolverClientComunication.Models.DbInstance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instance");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbParameters", b =>
                {
                    b.HasOne("SolverClientComunication.Models.DbInstance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instance");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbPassagensOnFlightReport", b =>
                {
                    b.HasOne("SolverClientComunication.Models.DbFlightsReport", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SolverClientComunication.Models.DbRequests", "Passenger")
                        .WithMany()
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbRefuelsReport", b =>
                {
                    b.HasOne("SolverClientComunication.Models.DbAirplanes", "Airplanes")
                        .WithMany()
                        .HasForeignKey("AirplanesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SolverClientComunication.Models.DbAirports", "Airport")
                        .WithMany()
                        .HasForeignKey("AirportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SolverClientComunication.Models.DbInstance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airplanes");

                    b.Navigation("Airport");

                    b.Navigation("Instance");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbRequests", b =>
                {
                    b.HasOne("SolverClientComunication.Models.DbAirports", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SolverClientComunication.Models.DbInstance", "Instance")
                        .WithMany()
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SolverClientComunication.Models.DbAirports", "Origin")
                        .WithMany()
                        .HasForeignKey("OriginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destination");

                    b.Navigation("Instance");

                    b.Navigation("Origin");
                });

            modelBuilder.Entity("SolverClientComunication.Models.DbSeats", b =>
                {
                    b.HasOne("SolverClientComunication.Models.DbAirplanes", "Airplanes")
                        .WithMany()
                        .HasForeignKey("AirplanesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airplanes");
                });
#pragma warning restore 612, 618
        }
    }
}
